dnl Process this file with autoconf to produce a configure script.

AC_PREREQ(2.59)

dnl ================================================================
dnl Package version (i.e. the pretty number that users see)
dnl ================================================================
m4_define([gx_major_version], [0])
m4_define([gx_minor_version], [1])
m4_define([gx_micro_version], [0])
m4_define([gx_version],
          [gx_major_version.gx_minor_version.gx_micro_version])

dnl ================================================================
dnl Interface version details for libtool
dnl ================================================================
# NB: I didn't copy the widely used glib/gtk style of dealing with libtool
# versioning since I found the different (compared to libtool's documentation)
# ideas for what the interface age should represent; and the addition of a
# binary age confusing. I couldn't find any documentation/mailing list archives
# etc explaing the ideas nor any code that makes use of those values. They also
# seem to go against the advice of not basing the libtool versioning on package
# versioning.
# 
# For reference on how the various numbers should be updated at release time
# these rules are adapted from the libtool info pages:
#
#  1. Update the version information only immediately before a public
#     release of your software.
#
#  2. If the library source code has changed at all since the last
#     update, then increment REVISION (`C:R:A' becomes `C:r+1:A').
#
#  3. If any interfaces have been added, removed, or changed since the
#     last update, increment CURRENT, and set REVISION to 0.
#
#  4. If any interfaces have been added since the last public release,
#     then increment AGE.
#
#  5. If any interfaces have been removed since the last public release,
#     then set AGE to 0.
m4_define([gx_lt_current], 0)
m4_define([gx_lt_revision], 0)
m4_define([gx_lt_age], 0)
# We do also tell libtool the pretty version also:
m4_define([gx_lt_release], [gx_version])

AC_INIT(gx, [gx_version])
AC_CONFIG_SRCDIR(src/gx-connection.c)
AC_CONFIG_MACRO_DIR([m4])
AC_CONFIG_HEADERS(config.h)
AM_INIT_AUTOMAKE([gnu])

dnl ================================================================
dnl More version number stuff
dnl ================================================================
GX_MAJOR_VERSION=gx_major_version
GX_MINOR_VERSION=gx_minor_version
GX_MICRO_VERSION=gx_micro_version
GX_VERSION=gx_version

AC_SUBST(GX_MAJOR_VERSION)
AC_SUBST(GX_MINOR_VERSION)
AC_SUBST(GX_MICRO_VERSION)
AC_SUBST(GX_VERSION)


dnl ================================================================
dnl libtool versioning
dnl ================================================================
GX_LT_CURRENT=gx_lt_current
GX_LT_REVISION=gx_lt_revision
GX_LT_AGE=gx_lt_age
GX_LT_RELEASE=gx_lt_release
AC_SUBST(GX_LT_CURRENT)
AC_SUBST(GX_LT_REVISION)
AC_SUBST(GX_LT_AGE)
AC_SUBST(GX_LT_RELEASE)

AM_MAINTAINER_MODE


dnl ================================================================
dnl Handle extra configure options
dnl ================================================================

AC_ARG_ENABLE(debug,
  AC_HELP_STRING([--enable-debug],
    [enable debuging messages]),
  [
   if test $enableval = yes; then 
     AC_DEFINE(_DEBUG, 1, "define to enable debuging")

     CFLAGS="-g3 -O0"
     EXTRA_CFLAGS="-Wall -Werror"
   else
    if test -z $CFLAGS; then
     CFLAGS="-g3 -O2"
    fi
   fi
  ],
  [
   if test -z $CFLAGS; then
    CFLAGS="-g3 -O2"
   fi
  ])


AC_ARG_ENABLE(werror,
  AC_HELP_STRING([--enable-werror],
    [Use -Werror option for compilation]),
  [
      if test $enableval = yes; then 
         EXTRA_CFLAGS="-Wall -Werror"
      else
         EXTRA_CFLAGS="-Wall"
      fi
  ], 
  [
   if test -z $EXTRA_CFLAGS; then
      EXTRA_CFLAGS="-Wall"
   fi
  ])

AC_ARG_ENABLE(uninstalled-build,
              AC_HELP_STRING([--enable-uninstalled-build],
			     [Search for files in build directory as well]),
	      enable_uninstalled=yes,)
if test x"$enable_uninstalled" = xyes; then
	AC_DEFINE_UNQUOTED(
        SHARE_UNINSTALLED_DIR,"`pwd`/src/data",[path to source data dir])
fi


dnl ================================================================
dnl Compiler stuff.
dnl ================================================================
AC_PROG_CC
AC_ISC_POSIX
AC_C_CONST


dnl ================================================================
dnl Libtool stuff.
dnl ================================================================
AC_PROG_LIBTOOL
LIBTOOL="$LIBTOOL --preserve-dup-deps"


dnl ================================================================
dnl I18n stuff.
dnl ================================================================
dnl AC_PROG_INTLTOOL([0.23])
dnl GETTEXT_PACKAGE=gx
dnl AC_SUBST(GETTEXT_PACKAGE)
dnl AC_SUBST([CONFIG_STATUS_DEPENDENCIES],['$(top_srcdir)/po/LINGUAS'])
dnl AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE", [Gettext package])
dnl ALL_LINGUAS="`cat "$srcdir/po/LINGUAS" | grep -v '^#'`"
dnl gxlocaledir='${prefix}/${DATADIRNAME}/locale'
dnl AC_SUBST(gxlocaledir)
dnl AM_GLIB_GNU_GETTEXT


dnl ================================================================
dnl Documentation stuff.
dnl ================================================================
GTK_DOC_CHECK(1.4)
GNOME_DOC_INIT


dnl ================================================================
dnl Check for dependency packages.
dnl ================================================================
PKG_CHECK_MODULES(GX_DEP, [
                  xcb
		  glib-2.0 >= 2.16
                  gobject-2.0
])
AC_SUBST(GX_DEP_CFLAGS)
AC_SUBST(GX_DEP_LIBS)

PKG_CHECK_MODULES(GXGEN_DEP, [
                  glib-2.0 >= 2.16
                  libxml-2.0
])
AC_SUBST(GXGEN_DEP_CFLAGS)
AC_SUBST(GXGEN_DEP_LIBS)

dnl ================================================================
dnl Misc program dependencies.
dnl ================================================================
AC_PATH_PROG(GLIB_GENMARSHAL, glib-genmarshal)
AC_PROG_INSTALL


dnl ================================================================
dnl Checks for header files.
dnl ================================================================
AC_PATH_X
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h limits.h unistd.h signal.h)


dnl ================================================================
dnl Checks for library functions.
dnl ================================================================
AC_TYPE_SIGNAL
AC_CHECK_FUNCS(putenv strdup)


dnl ================================================================
dnl What needs to be substituted in other files
dnl ================================================================
AC_SUBST(EXTRA_CFLAGS)
AC_SUBST(EXTRA_CPPFLAGS)


dnl ================================================================
dnl Dah Da!
dnl ================================================================
AC_OUTPUT(
Makefile 
tools/Makefile
src/Makefile
tests/Makefile
dnl po/Makefile.in
dnl gx-0.1.0.pc
)

